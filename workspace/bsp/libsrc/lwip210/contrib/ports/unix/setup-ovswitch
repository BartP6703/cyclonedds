#!/usr/bin/env bash
#
# Setup open-vswitch for connecting multiple LwIP applications
# Usage: $0 [br-dev] [num-ports] (creates br-dev with num-ports tap devices)
#        $0 [br-dev] delete      (delete br-dev and all associated tap devices)
#
BR_DEV="${1:-br0}"
BR_ADDR="192.168.0.1/24"
NUM_PORTS="${2:-2}"

function do_cmd() {
    if [ -n "$dry_run" ]; then
        echo "execute: $@"
    else
        sudo "$@" || { echo "Failed! (cmd: '$@', rc: $?)"; exit 1; }
    fi
    return $?
}

# Undo 
if [[ "$BR_DEV" == "delete" ]] || [[ "$NUM_PORTS" == "delete" ]]; then
    if [[ "$BR_DEV" == "delete" ]]; then
        BR_DEV="br0"
    fi
    echo "Deleting switch for dev $BR_DEV"
    ports=$(do_cmd ovs-vsctl list-ports $BR_DEV)
    for p in $ports; do
        [[ "$p" == "tap"* ]] || { echo "Port '$p' doesn't look like a tap device, bailing out!"; exit 1; }
        do_cmd ovs-vsctl del-port $BR_DEV $p
        do_cmd ip link set dev $p down
        do_cmd ip tuntap del dev $p mode tap
    done
    do_cmd ovs-vsctl del-br $BR_DEV
    exit $?
fi

echo "Creating switch for dev $BR_DEV ($BR_ADDR) with $NUM_PORTS ports (tap0-$(( $NUM_PORTS - 1 )))"

do_cmd ovs-vsctl add-br $BR_DEV
do_cmd ip link set dev $BR_DEV up
do_cmd ip addr add "$BR_ADDR" dev "$BR_DEV"

for ((i=0 ; i < $NUM_PORTS ; i++)); do
    do_cmd ip tuntap add dev tap$i mode tap
    do_cmd ip link set dev tap$i up
    do_cmd ovs-vsctl add-port $BR_DEV tap$i
done
